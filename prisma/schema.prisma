// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Unit {
  KRM
  TSK
  MSK
  CUP

  ML
  CL
  DL
  L

  G
  HG
  KG

  ST
  PKT // or FÖRP
}

// The standardized Ingredient model
model Ingredient {
  id   String @id @default(cuid(2))
  name String @unique // canonical name in singular form

  displayNameSingular String // e.g., "Potatis"
  displayNamePlural   String // e.g., "Potatisar"

  shoppingUnit Unit

  ingredientCategory   IngredientCategory @relation(fields: [ingredientCategoryId], references: [id])
  ingredientCategoryId String

  // This ingredient can be part of many recipe ingredients
  recipes RecipeIngredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ingredients")
}

model IngredientCategory {
  id   String @id @default(cuid(2))
  name String @unique // e.g., "Grönsaker & Frukt", "Skafferi"...

  ingredients Ingredient[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("ingredient_categories")
}

model RecipeIngredient {
  id       String   @id @default(cuid(2))
  text     String
  note     String?
  quantity Decimal?
  unit     Unit?

  ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  ingredientId String

  // Each ingredient is used in at least one instruction (normally)
  instructions RecipeInstruction[]

  Recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recipe_ingredients")
}

model RecipeInstruction {
  id   String @id @default(cuid(2))
  text String

  // Each instruction may use multiple ingredients
  recipeIngredients RecipeIngredient[]

  Recipe   Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recipe_instructions")
}

model Recipe {
  id          String  @id @default(cuid(2))
  slug        String  @unique
  name        String
  description String?

  recipeIngredients  RecipeIngredient[]
  recipeInstructions RecipeInstruction[]

  oven Int?

  // createdBy   User
  originalAuthor String?
  sourceUrl      String?
  isImported     Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("recipes")
}
